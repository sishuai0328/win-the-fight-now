require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  process.env.VITE_SUPABASE_ANON_KEY
);

async function analyzeTables() {
  console.log('=== ÂàÜÊûê Supabase Êï∞ÊçÆË°®ÁªìÊûÑ ===\n');
  
  const tables = ['payments', 'subscriptions', 'member_info'];
  
  for (const tableName of tables) {
    console.log(`üìã Ë°®: ${tableName}`);
    console.log('‚îÄ'.repeat(50));
    
    try {
      // Êü•ËØ¢Ë°®ÁªìÊûÑÔºàÈÄöËøáÊèíÂÖ•Á©∫Êï∞ÊçÆÊù•Ëé∑ÂèñÂàó‰ø°ÊÅØÔºâ
      const { error } = await supabase
        .from(tableName)
        .insert({})
        .select();
      
      if (error) {
        console.log('ÈîôËØØ‰ø°ÊÅØ:', error.message);
        if (error.details) {
          console.log('ËØ¶ÁªÜ‰ø°ÊÅØ:', error.details);
        }
      }
      
      // Êü•ËØ¢Áé∞ÊúâÊï∞ÊçÆ
      const { data, error: selectError, count } = await supabase
        .from(tableName)
        .select('*', { count: 'exact' })
        .limit(3);
      
      if (selectError) {
        console.log('‚ùå Êü•ËØ¢Â§±Ë¥•:', selectError.message);
      } else {
        console.log(`‚úÖ Ë°®Â≠òÂú®ÔºåÂÖ± ${count} Êù°ËÆ∞ÂΩï`);
        if (data && data.length > 0) {
          console.log('Á§∫‰æãÊï∞ÊçÆÁªìÊûÑ:');
          const sample = data[0];
          Object.keys(sample).forEach(key => {
            const value = sample[key];
            const type = typeof value;
            console.log(`  ${key}: ${type} = ${JSON.stringify(value)}`);
          });
        } else {
          console.log('Ë°®‰∏∫Á©∫ÔºåÊó†Ê≥ïÊòæÁ§∫ÁªìÊûÑ');
        }
      }
    } catch (err) {
      console.log('‚ùå ÂºÇÂ∏∏:', err.message);
    }
    
    console.log('\n');
  }
  
  // Ê£ÄÊü• conversation_sessions Ë°®
  console.log('üìã Ê£ÄÊü•Áé∞ÊúâÁöÑ conversation_sessions Ë°®');
  console.log('‚îÄ'.repeat(50));
  try {
    const { data, error, count } = await supabase
      .from('conversation_sessions')
      .select('*', { count: 'exact' })
      .limit(1);
    
    if (error) {
      console.log('‚ùå conversation_sessions Êü•ËØ¢Â§±Ë¥•:', error.message);
    } else {
      console.log(`‚úÖ conversation_sessions Ë°®Â≠òÂú®ÔºåÂÖ± ${count} Êù°ËÆ∞ÂΩï`);
      if (data && data.length > 0) {
        console.log('Â≠óÊÆµÁªìÊûÑ:');
        Object.keys(data[0]).forEach(key => {
          console.log(`  ${key}: ${typeof data[0][key]}`);
        });
      }
    }
  } catch (err) {
    console.log('‚ùå conversation_sessions ÂºÇÂ∏∏:', err.message);
  }
}

analyzeTables().catch(console.error);